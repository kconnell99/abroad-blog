{"version":3,"file":"static/webpack/static/development/pages/photos.js.faa5d77c07436d1ad1cd.hot-update.js","sources":["webpack:///./components/PhotoGrid/PhotoGrid.tsx"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport {useState} from 'react';\nimport {ImageContainer,PhotoContainer,PhotoGridContainer} from './components';\nimport {PopupBackgroundContainer,PopupImageContent} from '../Popups/Popups';\n\nexport default function PhotoGrid({photos}:any){\n    const [photoEnlarged,setPhotoEnlarged] = useState(false);\n    const [photoChosen,setPhotoChosen] = useState(null);\n    const togglePhoto = (photo:any) => {\n        setPhotoEnlarged(!photoEnlarged);\n        setPhotoChosen(photo);\n    }\n\n    const showPic=(photo:any)=>{\n        // console.log(photo.fields.photo.fields.description)\n        return(\n        <ImageContainer src = {photo.fields.photo.fields.file.url}/>        \n        )\n        \n    }\n\n    return(\n        <>\n            <PhotoGridContainer>\n                {photos && photos.data.map((photo:any)=>\n                    <PhotoContainer onClick={()=>togglePhoto(photo)} key={photo.sys.id}>    \n                        <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                        {photoEnlarged && \n                        <PopupBackgroundContainer onClick={togglePhoto}>\n                            <PopupImageContent>\n                                {photoChosen && showPic(photoChosen)}\n                            </PopupImageContent>\n                        </PopupBackgroundContainer>\n                        }\n                        {/* todo: on click, photo enlarges and caption is shown */}\n                        {/* <p>{photo.fields.photo.fields.description}</p> */}\n                    </PhotoContainer>\n                    )\n                }\n            </PhotoGridContainer>\n        </>\n        \n    )\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAJA;AAmBA;;;;A","sourceRoot":""}