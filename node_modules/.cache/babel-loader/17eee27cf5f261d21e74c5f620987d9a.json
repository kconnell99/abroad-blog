{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { ImageContainer, PhotoContainer } from './components';\nimport { PopupBackgroundContainer, PopupImageContent } from '../Popups/Popups';\nexport default function PhotoGrid(_ref) {\n  var photos = _ref.photos;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoEnlarged = _useState2[0],\n      setPhotoEnlarged = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      photoChosen = _useState4[0],\n      setPhotoChosen = _useState4[1];\n\n  var togglePhoto = function togglePhoto(photo) {\n    setPhotoEnlarged(!photoEnlarged);\n    setPhotoChosen(photo);\n    console.log(photoChosen);\n  };\n\n  var showPic = function showPic(photo) {\n    console.log(photo.fields.photo.fields.description); // <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PhotoGridContainer, null, photos && photos.data.map(function (photo) {\n    return React.createElement(PhotoContainer, {\n      onClick: function onClick() {\n        return togglePhoto(photo);\n      },\n      key: photo.sys.id\n    }, React.createElement(ImageContainer, {\n      src: photo.fields.photo.fields.file.url\n    }), photoEnlarged && React.createElement(PopupBackgroundContainer, {\n      onClick: togglePhoto\n    }, React.createElement(PopupImageContent, null)));\n  })));\n}\nvar PhotoGridContainer = styled.div(_templateObject());\nvar PhotoEnlarged = styled.div(_templateObject2());","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/PhotoGrid/PhotoGrid.tsx"],"names":["React","styled","useState","ImageContainer","PhotoContainer","PopupBackgroundContainer","PopupImageContent","PhotoGrid","photos","photoEnlarged","setPhotoEnlarged","photoChosen","setPhotoChosen","togglePhoto","photo","console","log","showPic","fields","description","data","map","sys","id","file","url","PhotoGridContainer","div","PhotoEnlarged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,cAAR,EAAuBC,cAAvB,QAA4C,cAA5C;AACA,SAAQC,wBAAR,EAAiCC,iBAAjC,QAAyD,kBAAzD;AAEA,eAAe,SAASC,SAAT,OAAgC;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAAA,kBACFN,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,MACpCO,aADoC;AAAA,MACtBC,gBADsB;;AAAA,mBAENR,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAEpCS,WAFoC;AAAA,MAExBC,cAFwB;;AAG3C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAe;AAC/BJ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAG,IAAAA,cAAc,CAACE,KAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACH,GAJD;;AAMA,MAAMM,OAAO,GAAC,SAARA,OAAQ,CAACH,KAAD,EAAa;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,MAAN,CAAaJ,KAAb,CAAmBI,MAAnB,CAA0BC,WAAtC,EADuB,CAEvB;AACH,GAHD;;AAKA,SACI,0CACI,oBAAC,kBAAD,QACKX,MAAM,IAAIA,MAAM,CAACY,IAAP,CAAYC,GAAZ,CAAgB,UAACP,KAAD;AAAA,WACvB,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE;AAAA,eAAID,WAAW,CAACC,KAAD,CAAf;AAAA,OAAzB;AAAiD,MAAA,GAAG,EAAEA,KAAK,CAACQ,GAAN,CAAUC;AAAhE,OACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAIT,KAAK,CAACI,MAAN,CAAaJ,KAAb,CAAmBI,MAAnB,CAA0BM,IAA1B,CAA+BC;AAAtD,MADJ,EAEKhB,aAAa,IACd,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAEI;AAAnC,OAGI,oBAAC,iBAAD,OAHJ,CAHJ,CADuB;AAAA,GAAhB,CADf,CADJ,CADJ;AA0BH;AAED,IAAMa,kBAAkB,GAACzB,MAAM,CAAC0B,GAAR,mBAAxB;AAKA,IAAMC,aAAa,GAAC3B,MAAM,CAAC0B,GAAR,oBAAnB","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport {useState} from 'react';\nimport {ImageContainer,PhotoContainer} from './components';\nimport {PopupBackgroundContainer,PopupImageContent} from '../Popups/Popups';\n\nexport default function PhotoGrid({photos}:any){\n    const [photoEnlarged,setPhotoEnlarged] = useState(false);\n    const [photoChosen,setPhotoChosen] = useState(null);\n    const togglePhoto = (photo:any) => {\n        setPhotoEnlarged(!photoEnlarged);\n        setPhotoChosen(photo);\n        console.log(photoChosen)\n    }\n\n    const showPic=(photo:any)=>{\n        console.log(photo.fields.photo.fields.description)\n        // <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n    }\n\n    return(\n        <>\n            <PhotoGridContainer>\n                {photos && photos.data.map((photo:any)=>\n                    <PhotoContainer onClick={()=>togglePhoto(photo)} key={photo.sys.id}>    \n                        <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                        {photoEnlarged && \n                        <PopupBackgroundContainer onClick={togglePhoto}>\n                        {/* <PopupBackgroundContainer onClick={togglePhoto}> */}\n\n                            <PopupImageContent>\n                                {/* {photoChosen && \n                                    <ImageContainer src = {photoChosen.fields.photo.fields.description}/>} */}\n                                    \n                            </PopupImageContent>\n                        </PopupBackgroundContainer>\n                        }\n                        {/* todo: on click, photo enlarges and caption is shown */}\n                        {/* <p>{photo.fields.photo.fields.description}</p> */}\n                    </PhotoContainer>\n                    )\n                }\n            </PhotoGridContainer>\n        </>\n        \n    )\n}\n\nconst PhotoGridContainer=styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nconst PhotoEnlarged=styled.div`\n\n`\n\n"]},"metadata":{},"sourceType":"module"}