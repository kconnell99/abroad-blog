{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { PopupBackgroundContainer, PopupTextContent } from '../Popups/Popups';\nimport { NavBarItemContainer, NavBarItemText } from './components';\n\nvar NavBarItem = function NavBarItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactIsShown = _useState2[0],\n      setContactIsShown = _useState2[1];\n\n  var togglePopup = function togglePopup() {\n    return setContactIsShown(!contactIsShown);\n  };\n\n  var handleChildClick = function handleChildClick(e) {\n    e.stopPropagation();\n  };\n\n  var linkName = props.children.toLowerCase();\n\n  if (linkName === 'home') {\n    return React.createElement(\"div\", null, React.createElement(Link, {\n      href: './'\n    }, React.createElement(NavBarItemContainer, null, React.createElement(NavBarItemText, null, props.children))));\n  }\n\n  if (linkName === 'contact') {\n    return React.createElement(\"div\", null, React.createElement(NavBarItemContainer, {\n      onClick: togglePopup\n    }, React.createElement(NavBarItemText, null, props.children)), contactIsShown && React.createElement(PopupBackgroundContainer, {\n      onClick: togglePopup\n    }, React.createElement(PopupTextContent, {\n      onClick: handleChildClick\n    }, \"Email: ktconnell99@gmail.com\")));\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Link, {\n    href: '/' + linkName\n  }, React.createElement(NavBarItemContainer, null, React.createElement(NavBarItemText, null, props.children))));\n};\n\nexport default NavBarItem;","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/NavBar/NavBarItem.tsx"],"names":["React","Link","useState","PopupBackgroundContainer","PopupTextContent","NavBarItemContainer","NavBarItemText","NavBarItem","props","contactIsShown","setContactIsShown","togglePopup","handleChildClick","e","stopPropagation","linkName","children","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,wBAAR,EAAkCC,gBAAlC,QAAyD,kBAAzD;AACA,SAAQC,mBAAR,EAA6BC,cAA7B,QAAkD,cAAlD;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAe;AAAA,kBAEWN,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAEzBO,cAFyB;AAAA,MAEVC,iBAFU;;AAGhC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,iBAAiB,CAAC,CAACD,cAAF,CAAvB;AAAA,GAApB;;AAEA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAU;AACjCA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,QAAN,CAAeC,WAAf,EAAjB;;AACA,MAAGF,QAAQ,KAAK,MAAhB,EAAuB;AACrB,WACE,iCACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAG;AAAb,OACA,oBAAC,mBAAD,QACE,oBAAC,cAAD,QACGP,KAAK,CAACQ,QADT,CADF,CADA,CADF,CADF;AAWD;;AAED,MAAGD,QAAQ,KAAK,SAAhB,EAA0B;AACxB,WACE,iCACI,oBAAC,mBAAD;AAAqB,MAAA,OAAO,EAAIJ;AAAhC,OACE,oBAAC,cAAD,QACGH,KAAK,CAACQ,QADT,CADF,CADJ,EAMGP,cAAc,IACf,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAGE;AAApC,OACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAGC;AAA5B,sCADF,CAPF,CADF;AAeD;;AACD,SACE,iCACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAG,MAAMG;AAAnB,KACA,oBAAC,mBAAD,QACE,oBAAC,cAAD,QACGP,KAAK,CAACQ,QADT,CADF,CADA,CADF,CADF;AAWD,CApDD;;AAwDA,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport {useState} from 'react';\nimport {PopupBackgroundContainer, PopupTextContent} from '../Popups/Popups';\nimport {NavBarItemContainer, NavBarItemText} from './components';\n\n\nconst NavBarItem = (props:any) => {\n  \n  const [contactIsShown,setContactIsShown] = useState(false);\n  const togglePopup = () => setContactIsShown(!contactIsShown);\n\n  const handleChildClick = (e:any) =>{\n    e.stopPropagation();\n  }\n\n  const linkName = props.children.toLowerCase()\n  if(linkName === 'home'){\n    return (\n      <div>\n        <Link href ={'./'} >\n        <NavBarItemContainer>\n          <NavBarItemText>\n            {props.children}\n          </NavBarItemText>\n        </NavBarItemContainer>\n      </Link>\n      </div>\n    )\n  }\n\n  if(linkName === 'contact'){\n    return (\n      <div>\n          <NavBarItemContainer onClick = {togglePopup}>\n            <NavBarItemText>\n              {props.children}\n            </NavBarItemText>\n          </NavBarItemContainer>\n        {contactIsShown && \n        <PopupBackgroundContainer onClick ={togglePopup}>\n          <PopupTextContent onClick ={handleChildClick}>\n            Email: ktconnell99@gmail.com\n          </PopupTextContent>\n        </PopupBackgroundContainer>}\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Link href ={'/' + linkName}>\n      <NavBarItemContainer>\n        <NavBarItemText>\n          {props.children}\n        </NavBarItemText>\n      </NavBarItemContainer>\n      </Link>\n    </div>\n  );\n};\n\n\n\nexport default NavBarItem"]},"metadata":{},"sourceType":"module"}