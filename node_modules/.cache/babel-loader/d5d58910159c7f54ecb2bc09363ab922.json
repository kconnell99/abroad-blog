{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border: none;\\n  background: transparent;\\n  color: white;\\n  cursor: pointer;\\n  padding: 10px;\\n  width: 100%;\\n  transition: all .4s;\\n  text-align: center;\\n  &:hover{\\n    background: #bccbde;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n  text-decoration: none;\\n  cursor: pointer;\\n  padding: 10px;\\n  width: 100%;\\n  display: inline-block;\\n  transition: all .4s;\\n  text-align: center;\\n  &:hover{\\n    background: #bccbde;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { PopupBackgroundContainer, PopupContent } from '../Popups/Popups';\n\nvar NavBarItem = function NavBarItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactIsShown = _useState2[0],\n      setContactIsShown = _useState2[1];\n\n  var togglePopup = function togglePopup() {\n    return setContactIsShown(!contactIsShown);\n  };\n\n  var handleChildClick = function handleChildClick(e) {\n    e.stopPropagation();\n  };\n\n  var linkName = props.children.toLowerCase();\n\n  if (linkName === 'home') {\n    return React.createElement(\"div\", null, React.createElement(Link, {\n      href: './'\n    }, React.createElement(NavBarItemContainer, null, React.createElement(\"a\", null, props.children))));\n  }\n\n  if (linkName === 'contact') {\n    return React.createElement(\"div\", null, React.createElement(NavBarButtonContainer, {\n      onClick: togglePopup\n    }, props.children), contactIsShown && React.createElement(PopupBackgroundContainer, {\n      onClick: togglePopup\n    }, React.createElement(PopupContent, {\n      onClick: handleChildClick\n    }, \"Email: ktconnell99@gmail.com\")));\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Link, {\n    href: '/' + linkName\n  }, React.createElement(NavBarItemContainer, null, React.createElement(\"a\", null, props.children))));\n};\n\nvar NavBarItemContainer = styled.div(_templateObject());\nvar NavBarButtonContainer = styled.button(_templateObject2());\nexport default NavBarItem;","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/NavBar/NavBarItem.tsx"],"names":["React","Link","useState","styled","PopupBackgroundContainer","PopupContent","NavBarItem","props","contactIsShown","setContactIsShown","togglePopup","handleChildClick","e","stopPropagation","linkName","children","toLowerCase","NavBarItemContainer","div","NavBarButtonContainer","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,wBAAR,EAAkCC,YAAlC,QAAqD,kBAArD;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAe;AAAA,kBAEWL,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAEzBM,cAFyB;AAAA,MAEVC,iBAFU;;AAGhC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,iBAAiB,CAAC,CAACD,cAAF,CAAvB;AAAA,GAApB;;AAEA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAU;AACjCA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,QAAN,CAAeC,WAAf,EAAjB;;AACA,MAAGF,QAAQ,KAAK,MAAhB,EAAuB;AACrB,WACE,iCACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAG;AAAb,OACA,oBAAC,mBAAD,QACE,+BACGP,KAAK,CAACQ,QADT,CADF,CADA,CADF,CADF;AAWD;;AAED,MAAGD,QAAQ,KAAK,SAAhB,EAA0B;AACxB,WACE,iCACI,oBAAC,qBAAD;AAAuB,MAAA,OAAO,EAAIJ;AAAlC,OAAgDH,KAAK,CAACQ,QAAtD,CADJ,EAEGP,cAAc,IACf,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAGE;AAApC,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAGC;AAAxB,sCADF,CAHF,CADF;AAWD;;AACD,SACE,iCACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAG,MAAMG;AAAnB,KACA,oBAAC,mBAAD,QACE,+BACGP,KAAK,CAACQ,QADT,CADF,CADA,CADF,CADF;AAWD,CAhDD;;AAkDA,IAAME,mBAAmB,GAAGd,MAAM,CAACe,GAAV,mBAAzB;AAaA,IAAMC,qBAAqB,GAAGhB,MAAM,CAACiB,MAAV,oBAA3B;AAcA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport {useState} from 'react';\nimport styled from '@emotion/styled';\nimport {PopupBackgroundContainer, PopupContent} from '../Popups/Popups';\n\n\nconst NavBarItem = (props:any) => {\n  \n  const [contactIsShown,setContactIsShown] = useState(false);\n  const togglePopup = () => setContactIsShown(!contactIsShown);\n\n  const handleChildClick = (e:any) =>{\n    e.stopPropagation();\n  }\n\n  const linkName = props.children.toLowerCase()\n  if(linkName === 'home'){\n    return (\n      <div>\n        <Link href ={'./'} >\n        <NavBarItemContainer>\n          <a>\n            {props.children}\n          </a>\n        </NavBarItemContainer>\n      </Link>\n      </div>\n    )\n  }\n\n  if(linkName === 'contact'){\n    return (\n      <div>\n          <NavBarButtonContainer onClick = {togglePopup}>{props.children}</NavBarButtonContainer>\n        {contactIsShown && \n        <PopupBackgroundContainer onClick ={togglePopup}>\n          <PopupContent onClick ={handleChildClick}>\n            Email: ktconnell99@gmail.com\n          </PopupContent>\n        </PopupBackgroundContainer>}\n      </div>\n    );\n  }\n  return (\n    <div>\n      <Link href ={'/' + linkName}>\n      <NavBarItemContainer>\n        <a>\n          {props.children}\n        </a>\n      </NavBarItemContainer>\n      </Link>\n    </div>\n  );\n};\n\nconst NavBarItemContainer = styled.div`\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  padding: 10px;\n  width: 100%;\n  display: inline-block;\n  transition: all .4s;\n  text-align: center;\n  &:hover{\n    background: #bccbde;\n  }\n`\nconst NavBarButtonContainer = styled.button`\n  border: none;\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  padding: 10px;\n  width: 100%;\n  transition: all .4s;\n  text-align: center;\n  &:hover{\n    background: #bccbde;\n  }\n`\n\nexport default NavBarItem"]},"metadata":{},"sourceType":"module"}