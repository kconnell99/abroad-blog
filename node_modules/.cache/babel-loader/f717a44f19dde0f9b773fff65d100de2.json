{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    max-width: 100%;\\n    max-height: 100%;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    border: 5px solid white;\\n    max-width: 300px;\\n    max-height: 300px;\\n    background-color: white;\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n    margin-bottom: 25px;\\n    padding: 10px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { useState } from 'react';\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    photoEnlarged = _useState2[0],\n    setPhotoEnlarged = _useState2[1];\n\nvar togglePhoto = function togglePhoto() {\n  return setPhotoEnlarged(!photoEnlarged);\n};\n\nexport default function PhotoGrid(_ref) {\n  var photos = _ref.photos;\n  return React.createElement(React.Fragment, null, photoEnlarged && React.createElement(PhotoEnlarged, null), React.createElement(PhotoGridContainer, null, photos && photos.data.map(function (photo) {\n    return React.createElement(PhotoContainer, {\n      onClick: togglePhoto,\n      key: photo.sys.id\n    }, React.createElement(ImageContainer, {\n      src: photo.fields.photo.fields.file.url\n    }));\n  })));\n}\nvar PhotoGridContainer = styled.div(_templateObject());\nvar PhotoEnlarged = styled.div(_templateObject2());\nexport var PhotoContainer = styled.div(_templateObject3());\nexport var ImageContainer = styled.img(_templateObject4());","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/PhotoGrid/PhotoGrid.tsx"],"names":["React","styled","useState","photoEnlarged","setPhotoEnlarged","togglePhoto","PhotoGrid","photos","data","map","photo","sys","id","fields","file","url","PhotoGridContainer","div","PhotoEnlarged","PhotoContainer","ImageContainer","img"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;gBAGyCA,QAAQ,CAAC,KAAD,C;;IAA1CC,a;IAAcC,gB;;AACrB,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMD,gBAAgB,CAAC,CAACD,aAAF,CAAtB;AAAA,CAApB;;AAEA,eAAe,SAASG,SAAT,OAAgC;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAC3C,SACI,0CACKJ,aAAa,IACd,oBAAC,aAAD,OAFJ,EAKI,oBAAC,kBAAD,QACKI,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,WACvB,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEL,WAAzB;AAAsC,MAAA,GAAG,EAAEK,KAAK,CAACC,GAAN,CAAUC;AAArD,OACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAIF,KAAK,CAACG,MAAN,CAAaH,KAAb,CAAmBG,MAAnB,CAA0BC,IAA1B,CAA+BC;AAAtD,MADJ,CADuB;AAAA,GAAhB,CADf,CALJ,CADJ;AAmBH;AAED,IAAMC,kBAAkB,GAACf,MAAM,CAACgB,GAAR,mBAAxB;AAKA,IAAMC,aAAa,GAACjB,MAAM,CAACgB,GAAR,oBAAnB;AAIA,OAAO,IAAME,cAAc,GAAClB,MAAM,CAACgB,GAAR,oBAApB;AAeP,OAAO,IAAMG,cAAc,GAAGnB,MAAM,CAACoB,GAAV,oBAApB","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport {useState} from 'react';\nimport PopupBackgroundContainer from './NavBar/NavBarItem';\n\nconst [photoEnlarged,setPhotoEnlarged] = useState(false);\nconst togglePhoto = () => setPhotoEnlarged(!photoEnlarged);\n\nexport default function PhotoGrid({photos}:any){\n    return(\n        <>\n            {photoEnlarged && \n            <PhotoEnlarged>\n\n            </PhotoEnlarged>}\n            <PhotoGridContainer>\n                {photos && photos.data.map((photo:any)=>\n                    <PhotoContainer onClick={togglePhoto} key={photo.sys.id}>    \n                        <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                        {/* todo: on click, photo enlarges and caption is shown */}\n                        {/* <p>{photo.fields.photo.fields.description}</p> */}\n                    </PhotoContainer>\n                    )\n                }\n            </PhotoGridContainer>\n        </>\n        \n    )\n}\n\nconst PhotoGridContainer=styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nconst PhotoEnlarged=styled.div`\n\n`\n\nexport const PhotoContainer=styled.div`\n    border: 5px solid white;\n    max-width: 300px;\n    max-height: 300px;\n    background-color: white;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    margin-bottom: 25px;\n    padding: 10px;\n    margin-left: 5px;\n    margin-right: 5px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nexport const ImageContainer = styled.img`\n    max-width: 100%;\n    max-height: 100%;\n`"]},"metadata":{},"sourceType":"module"}