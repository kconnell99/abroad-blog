{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { ImageContainer, PhotoContainer } from './components';\nimport { PopupBackgroundContainer, PopupContent } from '../Popups/Popups';\nexport default function PhotoGrid(_ref) {\n  var photos = _ref.photos;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoEnlarged = _useState2[0],\n      setPhotoEnlarged = _useState2[1];\n\n  var togglePhoto = function togglePhoto() {\n    return setPhotoEnlarged(!photoEnlarged);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PhotoGridContainer, null, photos && photos.data.map(function (photo) {\n    return React.createElement(PhotoContainer, {\n      onClick: togglePhoto,\n      key: photo.sys.id\n    }, React.createElement(ImageContainer, {\n      src: photo.fields.photo.fields.file.url\n    }), photoEnlarged && React.createElement(PopupBackgroundContainer, {\n      onClick: togglePhoto\n    }, React.createElement(PopupContent, null, React.createElement(ImageContainer, {\n      src: photo.fields.photo.fields.file.url\n    }))));\n  })));\n}\nvar PhotoGridContainer = styled.div(_templateObject());\nvar PhotoEnlarged = styled.div(_templateObject2());","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/PhotoGrid/PhotoGrid.tsx"],"names":["React","styled","useState","ImageContainer","PhotoContainer","PopupBackgroundContainer","PopupContent","PhotoGrid","photos","photoEnlarged","setPhotoEnlarged","togglePhoto","data","map","photo","sys","id","fields","file","url","PhotoGridContainer","div","PhotoEnlarged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,cAAR,EAAuBC,cAAvB,QAA4C,cAA5C;AACA,SAAQC,wBAAR,EAAiCC,YAAjC,QAAoD,kBAApD;AAEA,eAAe,SAASC,SAAT,OAAgC;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAAA,kBACFN,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,MACpCO,aADoC;AAAA,MACtBC,gBADsB;;AAE3C,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,gBAAgB,CAAC,CAACD,aAAF,CAAtB;AAAA,GAApB;;AAEA,SACI,0CACI,oBAAC,kBAAD,QACKD,MAAM,IAAIA,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgB,UAACC,KAAD;AAAA,WACvB,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEH,WAAzB;AAAsC,MAAA,GAAG,EAAEG,KAAK,CAACC,GAAN,CAAUC;AAArD,OACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAIF,KAAK,CAACG,MAAN,CAAaH,KAAb,CAAmBG,MAAnB,CAA0BC,IAA1B,CAA+BC;AAAtD,MADJ,EAEKV,aAAa,IACd,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAEE;AAAnC,OACI,oBAAC,YAAD,QACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAIG,KAAK,CAACG,MAAN,CAAaH,KAAb,CAAmBG,MAAnB,CAA0BC,IAA1B,CAA+BC;AAAtD,MADJ,CADJ,CAHJ,CADuB;AAAA,GAAhB,CADf,CADJ,CADJ;AAsBH;AAED,IAAMC,kBAAkB,GAACnB,MAAM,CAACoB,GAAR,mBAAxB;AAKA,IAAMC,aAAa,GAACrB,MAAM,CAACoB,GAAR,oBAAnB","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport {useState} from 'react';\nimport {ImageContainer,PhotoContainer} from './components';\nimport {PopupBackgroundContainer,PopupContent} from '../Popups/Popups';\n\nexport default function PhotoGrid({photos}:any){\n    const [photoEnlarged,setPhotoEnlarged] = useState(false);\n    const togglePhoto = () => setPhotoEnlarged(!photoEnlarged);\n\n    return(\n        <>\n            <PhotoGridContainer>\n                {photos && photos.data.map((photo:any)=>\n                    <PhotoContainer onClick={togglePhoto} key={photo.sys.id}>    \n                        <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                        {photoEnlarged && \n                        <PopupBackgroundContainer onClick={togglePhoto}>\n                            <PopupContent>\n                                <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                            </PopupContent>\n                        </PopupBackgroundContainer>\n                        }\n                        {/* todo: on click, photo enlarges and caption is shown */}\n                        {/* <p>{photo.fields.photo.fields.description}</p> */}\n                    </PhotoContainer>\n                    )\n                }\n            </PhotoGridContainer>\n        </>\n        \n    )\n}\n\nconst PhotoGridContainer=styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`\n\nconst PhotoEnlarged=styled.div`\n\n`\n\n"]},"metadata":{},"sourceType":"module"}