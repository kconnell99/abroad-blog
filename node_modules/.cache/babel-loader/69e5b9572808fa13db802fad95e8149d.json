{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    animation-name: zoom;\\n    animation-duration: 0.6s;\\n    margin: auto;\\n    display: block;\\n    width: 80%;\\n    max-width: 700px;\\n    text-align: center;\\n    color: #ccc;\\n    padding: 10px 0;\\n    height: 150px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: auto;\\n    display: block;\\n    width: 80%;\\n    max-width: 700px;\\n\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 15px;\\n    right: 35px;\\n    color: #f1f1f1;\\n    font-size: 40px;\\n    font-weight: bold;\\n    transition: 0.3s;\\n    &:hover,&:focus{\\n        color: #bbb;\\n        text-decoration: none;\\n        cursor: pointer; \\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: none; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    padding-top: 100px;\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto;\\n    background-color: rgb(0,0,0); /* Fallback color */\\n    background-color: rgba(0,0,0,0.9);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { ImageContainer, PhotoContainer, PhotoGridContainer, CaptionOverlay } from './components';\nimport { PopupImageCaption, PopupImageContent } from '../Popups/Popups';\nimport styled from '@emotion/styled';\nexport default function PhotoGrid(_ref) {\n  var photos = _ref.photos;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      photoEnlarged = _useState2[0],\n      setPhotoEnlarged = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      photoChosen = _useState4[0],\n      setPhotoChosen = _useState4[1];\n\n  var togglePhoto = function togglePhoto(photo) {\n    setPhotoEnlarged(!photoEnlarged);\n    setPhotoChosen(photo);\n  };\n\n  var showPic = function showPic(photo) {\n    return React.createElement(React.Fragment, null, React.createElement(PopupImageContent, {\n      src: photo.fields.photo.fields.file.url\n    }), React.createElement(PopupImageCaption, null, photo.fields.photo.fields.description));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", null, \"Photos\"), React.createElement(PhotoGridContainer, null, photos && photos.data.map(function (photo) {\n    return React.createElement(PhotoContainer, {\n      onClick: function onClick() {\n        return togglePhoto(photo);\n      },\n      key: photo.sys.id\n    }, React.createElement(ImageContainer, {\n      src: photo.fields.photo.fields.file.url\n    }), React.createElement(CaptionOverlay, {\n      className: \"overlay\"\n    }, photo.fields.photo.fields.description));\n  })), React.createElement(Modal, null, React.createElement(ModalClose, null, \"$times\"), React.createElement(ModalContent, null), React.createElement(ModalCaption, null)));\n}\nvar Modal = styled.div(_templateObject());\nvar ModalClose = styled.div(_templateObject2());\nvar ModalContent = styled.img(_templateObject3());\nvar ModalCaption = styled.div(_templateObject4());","map":{"version":3,"sources":["/Users/katieconnell/Desktop/coding/abroad-blog/components/PhotoGrid/PhotoGrid.tsx"],"names":["React","useState","ImageContainer","PhotoContainer","PhotoGridContainer","CaptionOverlay","PopupImageCaption","PopupImageContent","styled","PhotoGrid","photos","photoEnlarged","setPhotoEnlarged","photoChosen","setPhotoChosen","togglePhoto","photo","showPic","fields","file","url","description","data","map","sys","id","Modal","div","ModalClose","ModalContent","img","ModalCaption"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,cAAR,EAAuBC,cAAvB,EAAsCC,kBAAtC,EAAyDC,cAAzD,QAA8E,cAA9E;AACA,SAAQC,iBAAR,EAAuEC,iBAAvE,QAA+F,kBAA/F;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAe,SAASC,SAAT,OAAgC;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAAA,kBACFT,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,MACpCU,aADoC;AAAA,MACtBC,gBADsB;;AAAA,mBAENX,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,MAEpCY,WAFoC;AAAA,MAExBC,cAFwB;;AAG3C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAe;AAC/BJ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACAG,IAAAA,cAAc,CAACE,KAAD,CAAd;AACH,GAHD;;AAKA,MAAMC,OAAO,GAAC,SAARA,OAAQ,CAACD,KAAD,EAAa;AACvB,WACI,0CACI,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAIA,KAAK,CAACE,MAAN,CAAaF,KAAb,CAAmBE,MAAnB,CAA0BC,IAA1B,CAA+BC;AAAzD,MADJ,EAEI,oBAAC,iBAAD,QAAoBJ,KAAK,CAACE,MAAN,CAAaF,KAAb,CAAmBE,MAAnB,CAA0BG,WAA9C,CAFJ,CADJ;AAMH,GAPD;;AAQA,SACI,0CACI,yCADJ,EAEI,oBAAC,kBAAD,QACKX,MAAM,IAAIA,MAAM,CAACY,IAAP,CAAYC,GAAZ,CAAgB,UAACP,KAAD;AAAA,WACvB,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE;AAAA,eAAID,WAAW,CAACC,KAAD,CAAf;AAAA,OAAzB;AAAiD,MAAA,GAAG,EAAEA,KAAK,CAACQ,GAAN,CAAUC;AAAhE,OACI,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAIT,KAAK,CAACE,MAAN,CAAaF,KAAb,CAAmBE,MAAnB,CAA0BC,IAA1B,CAA+BC;AAAtD,MADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAC;AAA1B,OAAqCJ,KAAK,CAACE,MAAN,CAAaF,KAAb,CAAmBE,MAAnB,CAA0BG,WAA/D,CAFJ,CADuB;AAAA,GAAhB,CADf,CAFJ,EAkBI,oBAAC,KAAD,QACI,oBAAC,UAAD,iBADJ,EAEI,oBAAC,YAAD,OAFJ,EAGI,oBAAC,YAAD,OAHJ,CAlBJ,CADJ;AA2BH;AAED,IAAMK,KAAK,GAAGlB,MAAM,CAACmB,GAAV,mBAAX;AAaA,IAAMC,UAAU,GAAGpB,MAAM,CAACmB,GAAV,oBAAhB;AAcA,IAAME,YAAY,GAAGrB,MAAM,CAACsB,GAAV,oBAAlB;AAOA,IAAMC,YAAY,GAAGvB,MAAM,CAACmB,GAAV,oBAAlB","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport {ImageContainer,PhotoContainer,PhotoGridContainer,CaptionOverlay} from './components';\nimport {PopupImageCaption,PopupBackgroundContainer,PopupImageContainer,PopupImageContent} from '../Popups/Popups';\nimport styled from '@emotion/styled';\n\nexport default function PhotoGrid({photos}:any){\n    const [photoEnlarged,setPhotoEnlarged] = useState(false);\n    const [photoChosen,setPhotoChosen] = useState(null);\n    const togglePhoto = (photo:any) => {\n        setPhotoEnlarged(!photoEnlarged);\n        setPhotoChosen(photo);\n    }\n\n    const showPic=(photo:any)=>{\n        return(\n            <>\n                <PopupImageContent src = {photo.fields.photo.fields.file.url}/>\n                <PopupImageCaption>{photo.fields.photo.fields.description}</PopupImageCaption>\n            </>\n        )    \n    }\n    return(\n        <>\n            <h2>Photos</h2>\n            <PhotoGridContainer>\n                {photos && photos.data.map((photo:any)=>\n                    <PhotoContainer onClick={()=>togglePhoto(photo)} key={photo.sys.id}>    \n                        <ImageContainer src = {photo.fields.photo.fields.file.url}/>\n                        <CaptionOverlay className=\"overlay\">{photo.fields.photo.fields.description}</CaptionOverlay>\n                    </PhotoContainer>\n                    )\n                }\n            </PhotoGridContainer>\n            {/* {photoEnlarged && \n                        <PopupBackgroundContainer onClick={togglePhoto}>\n                            <PopupImageContainer>\n                                {photoChosen && showPic(photoChosen)}\n                            </PopupImageContainer>\n                        </PopupBackgroundContainer>\n                        } */}\n            <Modal>\n                <ModalClose>$times</ModalClose>\n                <ModalContent></ModalContent>\n                <ModalCaption></ModalCaption>\n            </Modal>\n        </>\n        \n    )\n}\n\nconst Modal = styled.div`\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    padding-top: 100px;\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto;\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.9);\n`\nconst ModalClose = styled.div`\n    position: absolute;\n    top: 15px;\n    right: 35px;\n    color: #f1f1f1;\n    font-size: 40px;\n    font-weight: bold;\n    transition: 0.3s;\n    &:hover,&:focus{\n        color: #bbb;\n        text-decoration: none;\n        cursor: pointer; \n    }\n`\nconst ModalContent = styled.img`\n    margin: auto;\n    display: block;\n    width: 80%;\n    max-width: 700px;\n\n`\nconst ModalCaption = styled.div`\n    animation-name: zoom;\n    animation-duration: 0.6s;\n    margin: auto;\n    display: block;\n    width: 80%;\n    max-width: 700px;\n    text-align: center;\n    color: #ccc;\n    padding: 10px 0;\n    height: 150px;\n`"]},"metadata":{},"sourceType":"module"}