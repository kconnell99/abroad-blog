{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    button{\\n        color: red;\\n        background: transparent;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { FilterBar } from \"./FilterBar\";\nimport { useState } from \"react\";\nimport styled from '@emotion/styled';\nexport var FilterButton = function FilterButton(_ref) {\n  var tags = _ref.tags;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFilterBarShown = _useState2[0],\n      setIsFilterBarShown = _useState2[1];\n\n  var handleClick = function handleClick() {\n    setIsFilterBarShown(!isFilterBarShown);\n  };\n\n  var coll = document.getElementsByClassName(\"collapsible\");\n  var i;\n\n  for (i = 0; i < coll.length; i++) {\n    coll[i].addEventListener(\"click\", function () {\n      classList.toggle(\"active\");\n      var content = nextElementSibling;\n\n      if (content.style.display === \"block\") {\n        content.style.display = \"none\";\n      } else {\n        content.style.display = \"block\";\n      }\n    });\n  }\n\n  return React.createElement(FilterButtonContainer, null, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setIsFilterBarShown(!isFilterBarShown);\n    }\n  }, \"Filter\"), isFilterBarShown && React.createElement(FilterBar, {\n    id: \"filterBar\",\n    tags: tags\n  }));\n};\nvar FilterButtonContainer = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/FilterBar/FilterButton.tsx"],"names":["FilterBar","useState","styled","FilterButton","tags","isFilterBarShown","setIsFilterBarShown","handleClick","coll","document","getElementsByClassName","i","length","addEventListener","classList","toggle","content","nextElementSibling","style","display","FilterButtonContainer","div"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAbC,IAAa,QAAbA,IAAa;;AAAA,kBAESH,QAAQ,CAAC,KAAD,CAFjB;AAAA;AAAA,MAEhCI,gBAFgC;AAAA,MAEdC,mBAFc;;AAIvC,MAAMC,WAAW,GAAC,SAAZA,WAAY,GAAI;AAClBD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AAEH,GAHD;;AAKA,MAAIG,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAX;AACA,MAAIC,CAAJ;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAClCH,IAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,gBAAR,CAAyB,OAAzB,EAAkC,YAAW;AACzCC,MAAAA,SAAS,CAACC,MAAV,CAAiB,QAAjB;AACA,UAAIC,OAAO,GAAGC,kBAAd;;AACA,UAAID,OAAO,CAACE,KAAR,CAAcC,OAAd,KAA0B,OAA9B,EAAuC;AACvCH,QAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACC,OAFD,MAEO;AACPH,QAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACC;AACJ,KARD;AASC;;AAGD,SACI,oBAAC,qBAAD,QACI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAIb,mBAAmB,CAAC,CAACD,gBAAF,CAAvB;AAAA;AAAjB,cADJ,EAGYA,gBAAgB,IAAI,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAAyB,IAAA,IAAI,EAAED;AAA/B,IAHhC,CADJ;AAQH,CAjCM;AAoCP,IAAMgB,qBAAqB,GAAClB,MAAM,CAACmB,GAAR,mBAA3B","sourcesContent":["import { FilterBar } from \"./FilterBar\";\nimport { useState } from \"react\";\nimport styled from '@emotion/styled';\n\n\nexport const FilterButton = ({tags}:any) =>{\n\n    const [isFilterBarShown, setIsFilterBarShown] = useState(false);\n\n    const handleClick=()=>{\n        setIsFilterBarShown(!isFilterBarShown);\n        \n    }\n\n    var coll = document.getElementsByClassName(\"collapsible\");\n    var i;\n\n    for (i = 0; i < coll.length; i++) {\n    coll[i].addEventListener(\"click\", function() {\n        classList.toggle(\"active\");\n        var content = nextElementSibling;\n        if (content.style.display === \"block\") {\n        content.style.display = \"none\";\n        } else {\n        content.style.display = \"block\";\n        }\n    });\n    }\n\n\n    return(\n        <FilterButtonContainer>\n            <button onClick={()=>setIsFilterBarShown(!isFilterBarShown)}>Filter</button>   \n                {\n                    isFilterBarShown && <FilterBar id=\"filterBar\"tags={tags}></FilterBar>\n                }\n        </FilterButtonContainer> \n    )\n}\n\n\nconst FilterButtonContainer=styled.div`\n    display: flex;\n    button{\n        color: red;\n        background: transparent;\n    }\n`\n"]},"metadata":{},"sourceType":"module"}