{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { ModalPopup } from '../Modals/ModalPopup';\nimport { Modal, ModalClose } from '../Modals/components';\nimport { NavBarItemContainer, NavBarItemText } from './components';\n\nvar NavBarItem = function NavBarItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactIsShown = _useState2[0],\n      setContactIsShown = _useState2[1];\n\n  var togglePopup = function togglePopup() {\n    return setContactIsShown(!contactIsShown);\n  };\n\n  var handleChildClick = function handleChildClick(e) {\n    e.stopPropagation();\n  };\n\n  var linkName = props.children.toLowerCase();\n\n  if (linkName === 'home') {\n    return React.createElement(\"div\", null, React.createElement(Link, {\n      href: './'\n    }, React.createElement(NavBarItemContainer, null, React.createElement(NavBarItemText, null, props.children))));\n  }\n\n  if (linkName === 'contact') {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", null, React.createElement(NavBarItemContainer, {\n      onClick: togglePopup\n    }, React.createElement(NavBarItemText, null, props.children)), contactIsShown && React.createElement(ModalPopup, null)), contactIsShown && React.createElement(Modal, null, React.createElement(ModalClose, {\n      role: \"button\",\n      onClick: function onClick() {\n        return setContactIsShown(false);\n      }\n    }, \"X\"), React.createElement(ModalPopup, null)));\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Link, {\n    href: '/' + linkName\n  }, React.createElement(NavBarItemContainer, null, React.createElement(NavBarItemText, null, props.children))));\n};\n\nexport default NavBarItem;","map":null,"metadata":{},"sourceType":"module"}