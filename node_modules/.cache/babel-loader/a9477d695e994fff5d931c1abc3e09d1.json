{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border: none;\\n  background: transparent;\\n  color: white;\\n  cursor: pointer;\\n  padding: 10px;\\n  width: 100%;\\n  transition: all .4s;\\n  text-align: center;\\n  &:hover{\\n    background: #bccbde;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: white;\\n  text-decoration: none;\\n  cursor: pointer;\\n  padding: 10px;\\n  width: 100%;\\n  display: inline-block;\\n  transition: all .4s;\\n  text-align: center;\\n  &:hover{\\n    background: #bccbde;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { PopupboxManager } from 'react-popupbox';\n\nvar openPopupbox = function openPopupbox() {\n  var content = React.createElement(\"div\", null, React.createElement(\"p\", {\n    className: \"quotes\"\n  }, \"Work like you don't need the money.\"), React.createElement(\"p\", {\n    className: \"quotes\"\n  }, \"Dance like no one is watching.\"), React.createElement(\"p\", {\n    className: \"quotes\"\n  }, \"And love like you've never been hurt.\"), React.createElement(\"span\", {\n    className: \"quotes-from\"\n  }, \"\\u2015 Mark Twain\"));\n  PopupboxManager.open({\n    content: content\n  });\n};\n\nvar NavBarItem = function NavBarItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      contactIsShown = _useState2[0],\n      setContactIsShown = _useState2[1];\n\n  var hide = function hide() {\n    return setContactIsShown(false);\n  };\n\n  var show = function show() {\n    return setContactIsShown(true);\n  };\n\n  var linkName = props.children.toLowerCase();\n\n  if (linkName === 'home') {\n    return React.createElement(\"div\", null, React.createElement(Link, {\n      href: './'\n    }, React.createElement(NavBarItemContainer, null, React.createElement(\"a\", null, props.children))));\n  }\n\n  if (linkName === 'contact') {\n    return React.createElement(\"div\", null, React.createElement(NavBarButtonContainer, {\n      onClick: _this.openPopupBox\n    }, props.children), contactIsShown && React.createElement(\"div\", null, \"Email: ktconnell99@gmail.com\", React.createElement(\"button\", {\n      onClick: hide\n    }, \"X\"))); // return (\n    //   <div>\n    //       <NavBarButtonContainer onClick = {show}>{props.children}</NavBarButtonContainer>\n    //     {contactIsShown && \n    //     <div>\n    //       Email: ktconnell99@gmail.com\n    //       <button onClick ={hide}>X</button>\n    //     </div>}\n    //   </div>\n    // );\n  }\n\n  return React.createElement(\"div\", null, React.createElement(Link, {\n    href: '/' + linkName\n  }, React.createElement(NavBarItemContainer, null, React.createElement(\"a\", null, props.children))));\n};\n\nvar NavBarItemContainer = styled.div(_templateObject());\nvar NavBarButtonContainer = styled.button(_templateObject2());\nexport default NavBarItem;","map":{"version":3,"sources":["/Users/katherineconnell/Projects/abroad-blog/components/NavBar/NavBarItem.tsx"],"names":["React","Link","useState","styled","PopupboxManager","openPopupbox","content","open","NavBarItem","props","contactIsShown","setContactIsShown","hide","show","linkName","children","toLowerCase","openPopupBox","NavBarItemContainer","div","NavBarButtonContainer","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SACEC,eADF,QAGO,gBAHP;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GACX,iCACE;AAAG,IAAA,SAAS,EAAC;AAAb,2CADF,EAEE;AAAG,IAAA,SAAS,EAAC;AAAb,sCAFF,EAGE;AAAG,IAAA,SAAS,EAAC;AAAb,6CAHF,EAIE;AAAM,IAAA,SAAS,EAAC;AAAhB,yBAJF,CADF;AAQAF,EAAAA,eAAe,CAACG,IAAhB,CAAqB;AAAED,IAAAA,OAAO,EAAPA;AAAF,GAArB;AACD,CAVD;;AAaA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAe;AAAA,kBAEWP,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,MAEzBQ,cAFyB;AAAA,MAEVC,iBAFU;;AAGhC,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMD,iBAAiB,CAAC,KAAD,CAAvB;AAAA,GAAb;;AACA,MAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMF,iBAAiB,CAAC,IAAD,CAAvB;AAAA,GAAb;;AAEA,MAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAN,CAAeC,WAAf,EAAjB;;AACA,MAAGF,QAAQ,KAAK,MAAhB,EAAuB;AACrB,WACE,iCACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAG;AAAb,OACA,oBAAC,mBAAD,QACE,+BACGL,KAAK,CAACM,QADT,CADF,CADA,CADF,CADF;AAWD;;AAED,MAAGD,QAAQ,KAAK,SAAhB,EAA0B;AACxB,WACE,iCACI,oBAAC,qBAAD;AAAuB,MAAA,OAAO,EAAI,KAAI,CAACG;AAAvC,OAAsDR,KAAK,CAACM,QAA5D,CADJ,EAEGL,cAAc,IACf,iEAEE;AAAQ,MAAA,OAAO,EAAGE;AAAlB,WAFF,CAHF,CADF,CADwB,CAaxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,SACE,iCACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAG,MAAME;AAAnB,KACA,oBAAC,mBAAD,QACE,+BACGL,KAAK,CAACM,QADT,CADF,CADA,CADF,CADF;AAWD,CAxDD;;AA0DA,IAAMG,mBAAmB,GAAGf,MAAM,CAACgB,GAAV,mBAAzB;AAaA,IAAMC,qBAAqB,GAAGjB,MAAM,CAACkB,MAAV,oBAA3B;AAgBA,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport {useState} from 'react';\nimport styled from '@emotion/styled';\nimport {\n  PopupboxManager,\n  PopupboxContainer\n} from 'react-popupbox';\n\nconst openPopupbox = () => {\n  const content = (\n    <div>\n      <p className=\"quotes\">Work like you don't need the money.</p>\n      <p className=\"quotes\">Dance like no one is watching.</p>\n      <p className=\"quotes\">And love like you've never been hurt.</p>\n      <span className=\"quotes-from\">â€• Mark Twain</span>\n    </div>\n  )\n  PopupboxManager.open({ content })\n}\n\n\nconst NavBarItem = (props:any) => {\n  \n  const [contactIsShown,setContactIsShown] = useState(false);\n  const hide = () => setContactIsShown(false);\n  const show = () => setContactIsShown(true);\n\n  const linkName = props.children.toLowerCase()\n  if(linkName === 'home'){\n    return (\n      <div>\n        <Link href ={'./'} >\n        <NavBarItemContainer>\n          <a>\n            {props.children}\n          </a>\n        </NavBarItemContainer>\n      </Link>\n      </div>\n    )\n  }\n\n  if(linkName === 'contact'){\n    return (\n      <div>\n          <NavBarButtonContainer onClick = {this.openPopupBox}>{props.children}</NavBarButtonContainer>\n        {contactIsShown && \n        <div>\n          Email: ktconnell99@gmail.com\n          <button onClick ={hide}>X</button>\n        </div>}\n      </div>\n    );\n\n    \n    // return (\n    //   <div>\n    //       <NavBarButtonContainer onClick = {show}>{props.children}</NavBarButtonContainer>\n    //     {contactIsShown && \n    //     <div>\n    //       Email: ktconnell99@gmail.com\n    //       <button onClick ={hide}>X</button>\n    //     </div>}\n    //   </div>\n    // );\n  }\n  return (\n    <div>\n      <Link href ={'/' + linkName}>\n      <NavBarItemContainer>\n        <a>\n          {props.children}\n        </a>\n      </NavBarItemContainer>\n      </Link>\n    </div>\n  );\n};\n\nconst NavBarItemContainer = styled.div`\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  padding: 10px;\n  width: 100%;\n  display: inline-block;\n  transition: all .4s;\n  text-align: center;\n  &:hover{\n    background: #bccbde;\n  }\n`\nconst NavBarButtonContainer = styled.button`\n  border: none;\n  background: transparent;\n  color: white;\n  cursor: pointer;\n  padding: 10px;\n  width: 100%;\n  transition: all .4s;\n  text-align: center;\n  &:hover{\n    background: #bccbde;\n  }\n`\n\n\n\nexport default NavBarItem"]},"metadata":{},"sourceType":"module"}