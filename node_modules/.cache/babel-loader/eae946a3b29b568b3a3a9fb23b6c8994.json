{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _Set from \"@babel/runtime-corejs2/core-js/set\";\nimport React from \"react\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 5px;\\n  padding: 5px;\\n  margin: 5px;\\n  &:focus{\\n    background-color: yellow;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  transition: visibility 0s, opacity 0.5s linear;\\n  padding: 0;\\n  display: flex;\\n  margin: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from '@emotion/styled';\nexport var FilterBar = function FilterBar(_ref) {\n  var tags = _ref.tags;\n  var allTags = new _Set([]);\n\n  var addAllTags = function addAllTags(tags) {\n    tags.forEach(function (tag) {\n      return allTags.add(tag);\n    });\n    allTags.add(\"all\");\n  };\n\n  tags.data.map(function (tag) {\n    addAllTags(tag.fields.postTags);\n  });\n\n  var tagArr = _Array$from(allTags);\n\n  return React.createElement(FilterContainer, null, tagArr && tagArr.map(function (tag) {\n    return React.createElement(FilterItemButton, {\n      onClick: function onClick() {\n        filterSelection(tag);\n      },\n      key: tag\n    }, tag);\n  }));\n};\n\nvar filterSelection = function filterSelection(tag) {\n  var x, i;\n  x = document.getElementsByClassName(\"filterDiv\");\n\n  for (i = 0; i < x.length; i++) {\n    if (!x[i].classList.contains(tag)) {\n      x[i].setAttribute(\"style\", \"display: none\");\n    } else {\n      x[i].setAttribute(\"style\", \"display: block\");\n    }\n\n    if (tag == \"all\") {\n      x[i].setAttribute(\"style\", \"display: block\");\n    }\n  }\n};\n\nexport var FilterContainer = styled.ul(_templateObject());\nexport var FilterItemButton = styled.button(_templateObject2());","map":{"version":3,"sources":["/Users/katieconnell/Desktop/coding/abroad-blog/components/FilterBar/FilterBar.tsx"],"names":["styled","FilterBar","tags","allTags","addAllTags","forEach","tag","add","data","map","fields","postTags","tagArr","filterSelection","x","i","document","getElementsByClassName","length","classList","contains","setAttribute","FilterContainer","ul","FilterItemButton","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAGA,OAAO,IAAMC,SAAS,GAAE,SAAXA,SAAW,OAAc;AAAA,MAAZC,IAAY,QAAZA,IAAY;AAEpC,MAAIC,OAAmB,GAAC,SAAQ,EAAR,CAAxB;;AAEA,MAAMC,UAAU,GAAC,SAAXA,UAAW,CAACF,IAAD,EAAmB;AAClCA,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAAC,GAAG;AAAA,aAAEH,OAAO,CAACI,GAAR,CAAYD,GAAZ,CAAF;AAAA,KAAhB;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAY,KAAZ;AACD,GAHD;;AAKAL,EAAAA,IAAI,CAACM,IAAL,CAAUC,GAAV,CAAc,UAACH,GAAD,EAAW;AAACF,IAAAA,UAAU,CAACE,GAAG,CAACI,MAAJ,CAAWC,QAAZ,CAAV;AAAgC,GAA1D;;AAEA,MAAIC,MAAM,GAAG,YAAWT,OAAX,CAAb;;AACA,SACI,oBAAC,eAAD,QACKS,MAAM,IAAIA,MAAM,CAACH,GAAP,CAAW,UAACH,GAAD;AAAA,WAAc,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAI;AACjEO,QAAAA,eAAe,CAACP,GAAD,CAAf;AACD,OAFmC;AAGhC,MAAA,GAAG,EAAEA;AAH2B,OAGrBA,GAHqB,CAAd;AAAA,GAAX,CADf,CADJ;AAQD,CApBM;;AAsBP,IAAMO,eAAe,GAAC,SAAhBA,eAAgB,CAACP,GAAD,EAAe;AAEnC,MAAIQ,CAAJ,EAAOC,CAAP;AACAD,EAAAA,CAAC,GAAGE,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAJ;;AACA,OAAIF,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACD,CAAC,CAACI,MAAZ,EAAmBH,CAAC,EAApB,EAAuB;AACrB,QAAG,CAACD,CAAC,CAACC,CAAD,CAAD,CAAKI,SAAL,CAAeC,QAAf,CAAwBd,GAAxB,CAAJ,EAAiC;AAC/BQ,MAAAA,CAAC,CAACC,CAAD,CAAD,CAAKM,YAAL,CAAkB,OAAlB,EAA0B,eAA1B;AACD,KAFD,MAGI;AACFP,MAAAA,CAAC,CAACC,CAAD,CAAD,CAAKM,YAAL,CAAkB,OAAlB,EAA0B,gBAA1B;AACD;;AACD,QAAGf,GAAG,IAAE,KAAR,EAAc;AACZQ,MAAAA,CAAC,CAACC,CAAD,CAAD,CAAKM,YAAL,CAAkB,OAAlB,EAA0B,gBAA1B;AACD;AACF;AACF,CAfD;;AAiBA,OAAO,IAAMC,eAAe,GAACtB,MAAM,CAACuB,EAAR,mBAArB;AAOP,OAAO,IAAMC,gBAAgB,GAACxB,MAAM,CAACyB,MAAR,oBAAtB","sourcesContent":["import styled from '@emotion/styled';\nimport {useState} from 'react'\n\nexport const FilterBar =({tags}:any)=>{\n\n  var allTags:Set<string>=new Set([]);\n\n  const addAllTags=(tags:Array<any>)=>{\n    tags.forEach(tag=>allTags.add(tag))\n    allTags.add(\"all\")\n  }\n\n  tags.data.map((tag:any)=>{addAllTags(tag.fields.postTags)})\n\n  var tagArr = Array.from(allTags);\n  return(\n      <FilterContainer>\n          {tagArr && tagArr.map((tag:string)=><FilterItemButton onClick={()=>{\n            filterSelection(tag)\n          }\n            } key={tag}>{tag}</FilterItemButton>)}\n      </FilterContainer>\n  )   \n}\n\nconst filterSelection=(tag: string)=>{\n\n  var x, i;\n  x = document.getElementsByClassName(\"filterDiv\");\n  for(i=0;i<x.length;i++){\n    if(!x[i].classList.contains(tag)){\n      x[i].setAttribute(\"style\",\"display: none\")\n    }\n    else{\n      x[i].setAttribute(\"style\",\"display: block\")\n    }\n    if(tag==\"all\"){\n      x[i].setAttribute(\"style\",\"display: block\")\n    }\n  }\n}\n\nexport const FilterContainer=styled.ul`\n  transition: visibility 0s, opacity 0.5s linear;\n  padding: 0;\n  display: flex;\n  margin: 0;\n`\n\nexport const FilterItemButton=styled.button`\n  border-radius: 5px;\n  padding: 5px;\n  margin: 5px;\n  &:focus{\n    background-color: yellow;\n  }\n`"]},"metadata":{},"sourceType":"module"}